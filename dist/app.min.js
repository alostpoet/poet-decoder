class e{static execute(e){e.forEach((e=>{setTimeout((()=>{document.body.classList.add("step"+e)}),2e3*e)}))}}class t{static silent(){t.write("<p>Your Poet remained silent.</p>"),t.writeNote("<p>It seems that the image you provided does not contain any hidden data. <br>Make sure you have uploaded the original 1024x1024 pixels Poet image.</p>")}static reveal(e){t.write(`<p>The Poet whispered: <em>${e}</em></p>`);let i=parseInt(e.split(" ").pop()),a=PrimeFinder.find(i);document.getElementById("num").innerText=e.split(" ").pop(),document.getElementById("primeNumber").innerText=a.length}static msg({msg:e,containerId:t}){document.getElementById(t).innerHTML=e}static write(e){t.msg({msg:e,containerId:"step3"})}static writeNote(e){t.msg({msg:e,containerId:"poetNote"})}}class i{_file;_input;_reader;static BASE64REG=/(?:[a-zA-Z0-9+\/]{4})*(?:|(?:[a-zA-Z0-9+\/]{3}=)|(?:[a-zA-Z0-9+\/]{2}==)|(?:[a-zA-Z0-9+\/]{1}===))$/g;constructor(){this._input=document.querySelector('input[type="file"]'),this._input.addEventListener("change",(()=>{this.fileChanged()}),!1)}static reset(){window.location.reload()}fileChanged(){this._file=this._input.files[0],this._reader=new FileReader,this._reader.addEventListener("load",(e=>this.readFile(e))),this._reader.addEventListener("progress",(()=>{e.execute([0,1]),setTimeout((()=>{document.body.classList.add("hide")}),1)})),this._reader.readAsBinaryString(this._file)}readFile(i){e.execute([2,3]);const a=i.target.result;let s=this.extractData(a);s.length<5?t.silent():t.reveal(s)}extractData(e){return atob(e.match(i.BASE64REG)[0])}}new i;
