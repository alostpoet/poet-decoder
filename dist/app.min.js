class Decoder{_file;_input;_reader;static BASE64REG=/(?:[a-zA-Z0-9+\/]{4})*(?:|(?:[a-zA-Z0-9+\/]{3}=)|(?:[a-zA-Z0-9+\/]{2}==)|(?:[a-zA-Z0-9+\/]{1}===))$/g;constructor(){this._input=document.querySelector('input[type="file"]'),this._input.addEventListener("change",(()=>{this.fileChanged()}),!1)}static reset(){window.location.reload()}fileChanged(){this._file=this._input.files[0],this._reader=new FileReader,this._reader.addEventListener("load",(e=>this.readFile(e))),this._reader.addEventListener("progress",(()=>{Steps.execute([0,1]),setTimeout((()=>{document.body.classList.add("hide")}),1)})),this._reader.readAsBinaryString(this._file)}readFile(e){Steps.execute([2,3]);const t=e.target.result;let i=this.extractData(t);i.length<5?Poet.silent():Poet.reveal(i)}extractData(e){return atob(e.match(Decoder.BASE64REG)[0])}}class Poet{static silent(){Poet.write("<p>Your Poet remained silent.</p>"),Poet.writeNote("<p>It seems that the image you provided does not contain any hidden data. <br>Make sure you have uploaded the original 1024x1024 pixels Poet image.</p>")}static reveal(e){Poet.write(`<p>The Poet whispered: <em>${e}</em></p>`);let t=parseInt(e.split(" ").pop()),i=class PrimeFinder{static find(e){function t(e,t,i){var r=(Math.sqrt(4+8*(e+t))-2)/4,a=0,n=0;if(s.fill(!0),t){for(var o=Math.ceil((t-1)/3);o<(e+t-1)/3;o++)s[1+3*o-t]=!1;for(o=2;o<r;o++)if(n=Math.ceil((t-o)/(1+2*o)),a=(e+t-o)/(1+2*o),o%3-1)for(var d=n;d<a;d++)s[o+d+2*o*d-t]=!1}else{for(o=1;o<(e-1)/3;o++)s[1+3*o]=!1;for(o=2;o<r;o++)if(a=(e-o)/(1+2*o),o%3-1)for(d=o;d<a;d++)s[o+d+2*o*d]=!1}for(o=0;o<e;o++)s[o]&&i.push(2*(o+t)+1);return i}for(var i=e<=1e6?7500:e<=1e7?6e4:1e5,r=~~(e/i),a=e%i,s=Array(i/2),n=[],o=0;o<r;o++)n=t(i/2,o*i/2,n);return(n=a?t(a/2,r*i/2,n):n)[0]*=2,n}}.find(t);document.getElementById("num").innerText=e.split(" ").pop(),document.getElementById("primeNumber").innerText=i.length}static msg({msg:e,containerId:t}){document.getElementById(t).innerHTML=e}static write(e){Poet.msg({msg:e,containerId:"step3"})}static writeNote(e){Poet.msg({msg:e,containerId:"poetNote"})}}class Steps{static execute(e){e.forEach((e=>{setTimeout((()=>{document.body.classList.add("step"+e)}),2e3*e)}))}}export{Decoder};
